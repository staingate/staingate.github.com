<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: android | StainGate's Blog]]></title>
  <link href="http://staingate.github.io/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://staingate.github.io/"/>
  <updated>2014-11-27T22:11:34+08:00</updated>
  <id>http://staingate.github.io/</id>
  <author>
    <name><![CDATA[StainGate]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[关于Android APP的在线升级]]></title>
    <link href="http://staingate.github.io/blog/2014/11/27/company-meeting/"/>
    <updated>2014-11-27T21:30:19+08:00</updated>
    <id>http://staingate.github.io/blog/2014/11/27/company-meeting</id>
    <content type="html"><![CDATA[<p>前段时间应公司的要求要给公司的一个Android项目加上在线升级功能。于是经过一番的baidu和google，心里有了思路，最后将功能实现了。虽说实现的不好，但还是想着拿出来和大家分享一下。</p>

<p>首先，要实现在线升级，你就必须要有服务器端（&hellip;&hellip;那不废话么？！），我的实现过程如下：</p>

<ol>
<li>首先在数据库端建立一个目录用来存放所有版本的APP</li>
<li>服务器端建好数据库并建一张用来存放各版本APP的数据库表，并且数据库表中有一个字段用来表示是否是最新的版本</li>
<li>android端新建一个service，用来处理对新版本APP的下载</li>
<li>每次用户登陆成功进入欢迎Activity的时，自动查询数据库是否有新版本的，如果有则进行用数据库表中的版本号字段与APP本身的版本号进行对比，若发现是新版本，则调用负责下载的service进行下载，如果已经是最新版，则忽略。</li>
<li>程序下载完成后，弹出通知提示用户并自动转向系统提供的APP安装页面进行安装。</li>
</ol>


<p>在进行测试的时候我发现，虽然功能是实现了。但是每次用户登陆成功，或是回到欢迎Activity的时候，APP都会进行一次查询以判断是否有新版本APP。这消耗了很多的系统性能和用户时间。</p>

<p>所以我思考了一下，最后决定用系统广播的方式来实现这一功能。</p>

<ul>
<li><p>首先，每次用户登录成功的时候发送一条APP内部的广播，表示用户登录成功。</p></li>
<li><p>注册广播接收者接收这条广播，在onReceive()对数据库进行查询。不过这里要注意onReceive()方法是不能执行太过耗时的功能，所以这里最好用一个新的线程去执行查询。</p></li>
<li><p>后面的实现就比较类似了，所以就不写了。</p></li>
</ul>


<p> 整个功能的实现过程大概就是如此，希望能帮到你们。</p>

<p><code>StainGate</code></p>
]]></content>
  </entry>
  
</feed>
